name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 'latest'
        
    - name: Clean install dependencies
      run: |
        rm -rf node_modules package-lock.json
        npm install
      
    - name: Run tests
      run: npm test
      
    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-reports
        path: coverage/

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    permissions:
      contents: read
      pages: write
      id-token: write
      actions: read
      deployments: write
      
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 'latest'
        
    - name: Clean install dependencies
      run: |
        rm -rf node_modules package-lock.json
        npm install
        npm update
      
    - name: Build project
      run: npm run build
      
    - name: Create 404.html for SPA routing
      run: cp dist/index.html dist/404.html
      
    - name: Setup Pages
      uses: actions/configure-pages@v4
      with:
        enablement: true
      
    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: './dist'
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4